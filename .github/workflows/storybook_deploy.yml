name: Deploy Storybook to GitHub Pages

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'src/stories/**'
  pull_request:
    types:
      - labeled
    paths:
      - 'src/stories/**'

jobs:
  check_changes:
    if: contains(github.event.label.name, 'storybook-deploy')
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.changes.outputs.modified }}
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          fetch-depth: 20

      - name: Check if changes occurred in src/stories folder 🔍
        id: changes
        run: |
          # Will return `true` once, only on PR init (on further pushes `github.event.action = synchronize`)
          if [[ "${{ github.event_name }}" == 'pull_request' && "${{ github.event.action }}" == 'opened' ]]; then
            echo "modified=true" >> $GITHUB_OUTPUT

          # Will return 'true' by '!' operator that inverts bash status code:
          # 'git diff --quiet' returns '0' if there are no changes (true), '1' if there are changes (false)
          elif ! git diff --quiet ${{ github.event.before }} ${{ github.event.after }} src/stories/; then
            echo "Changes detected in src/stories folder. Continuing the workflow..."
            echo "modified=true" >> $GITHUB_OUTPUT
          else
            echo "No changes detected in src/stories. Skipping the workflow..."
            echo "modified=false" >> $GITHUB_OUTPUT
          fi


#  build:
#    needs: check_changes
#    if: needs.check_changes.outputs.changes == 'true'
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout 🛎️
#        uses: actions/checkout@v4
#
#      - name: Log in to Artifactory 🔑
#        run: echo "//${ARTIFACTORY_REGISTRY}/:_authToken=${ARTIFACTORY_TOKEN}" > .npmrc
#        env:
#          ARTIFACTORY_REGISTRY: artifactory.infrateam.xyz/artifactory/api/npm/npm/
#          ARTIFACTORY_TOKEN: ${{ secrets.STORYBOOK_TOKEN }}
#
#      - name: Cache Storybook packages 💾
#        uses: actions/cache@v4
#        with:
#          path: ./node_modules
#          key: storybook-cache-${{ hashFiles('package-lock.json') }}
#
#      - name: Install and Build SB 🛠️
#        run: |
#          npm install
#          npm run build-storybook
#
#      - name: Set name for the build 🌱
#        run: echo "BRANCH_NAME=$(basename ${{ github.head_ref || github.ref_name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
#
#      - name: Put the build into branch-named folder 📂
#        uses: JamesIves/github-pages-deploy-action@v4
#        with:
#          branch: storybook-pages
#          folder: storybook-static
#          target-folder: ${{ env.BRANCH_NAME }}
#          token: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Checkout to "storybook-pages" branch 🛎️
#        uses: actions/checkout@v4
#        with:
#          ref: storybook-pages
#          fetch-depth: 0
#
#      - name: Remove builds older than 1 days 🗑️
#        run: |
#          for folder in */; do
#            if [ "$folder" != "main/" ]; then
#              commit_date=$(git log -1 --format="%at" -- "$folder")
#              current_time=$(date +%s)
#              age=$(( (current_time - commit_date) / 86400 ))
#
#              if [ $age -ge 1 ]; then
#                echo "Deleting build: $folder because it is $((age)) days old"
#                rm -rf "$folder"
#              fi
#            fi
#          done
#
#      - name: Create Index File 📄
#        run: |
#          echo "<html><body style='font-family:monospace;text-align:center;padding:50px;background:#e3e1dd'><h1>Storybook builds</h1><table style='font-size:20px;text-align:center;width:100%;background:#444;border-radius:4px'><tr style='background:darkseagreen'><th style='padding:12px'>Build Name</th><th style='padding:12px'>Created</th></tr>" > index.html
#
#          for dir in */; do
#            commit_date=$(git log -1 --format="%at" -- "$dir")
#            commit_date_gmt2=$(TZ="Europe/Kyiv" date -d "@$commit_date" +"%d-%m-%Y %H:%M:%S")
#            echo "<tr style='background:#faebd7'><td style='padding:12px'><a href=\"$dir\">$dir</a></td><td style='padding:12px'>$commit_date_gmt2</td></tr>" >> index.html
#          done
#
#          echo "</table></body></html>" >> index.html
#          echo "Index file successfully updated!"
#
#      - name: Commit and Push 🪄
#        run: |
#          git config user.email "actions@github.com"
#          git config user.name "GitHub Actions"
#          git add .
#          git commit -m "Update index.html & remove old builds"
#          git push origin storybook-pages
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Upload artifact 📤
#        uses: actions/upload-pages-artifact@v3
#        with:
#          name: github-pages
#          path: ./
#
#  deploy:
#    needs: build
#    permissions:
#      pages: write
#      id-token: write
#      pull-requests: write
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
#    runs-on: ubuntu-latest
#    steps:
#      - name: Deploy to GitHub Pages 🚀
#        id: deployment
#        uses: actions/deploy-pages@v4
#        with:
#          artifact_name: github-pages
#
#      - name: Add Storybook link to PR 🔗
#        if: github.event_name == 'pull_request'
#        uses: thollander/actions-comment-pull-request@v2
#        with:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          message: |
#            ### 📗 Storybook has been deployed and lives [ _-->_ here _<--_ 🔗](${{ steps.deployment.outputs.page_url }}${{ env.BRANCH_NAME }})
#          comment_tag: execution
