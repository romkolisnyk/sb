name: Publish Storybook to GitHub Pages

on:
  workflow_dispatch:

jobs:

#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout 🛎️
#        uses: actions/checkout@v4
#
#      - name: Log in to Artifactory 🔑
#        run: echo "//${ARTIFACTORY_REGISTRY}/:_authToken=${ARTIFACTORY_TOKEN}" > .npmrc
#        env:
#          ARTIFACTORY_REGISTRY: artifactory.infrateam.xyz/artifactory/api/npm/npm/
#          ARTIFACTORY_TOKEN: ${{ secrets.STORYBOOK_TOKEN }}

#      - name: Install and Build SB 🛠️
#        run: |
#          npm install
#          npm run build-storybook
#
#      - name: Set branch name 🌱
#        run: echo "BRANCH_NAME=$(basename ${{ github.ref_name }})" >> $GITHUB_ENV
#
#      - name: Put the build into branch-named folder 📂
#        uses: JamesIves/github-pages-deploy-action@v4
#        with:
#          branch: storybook-pages
#          folder: storybook-static
#          target-folder: ${{ env.BRANCH_NAME }}
#          token: ${{ secrets.GITHUB_TOKEN }}

  create_artifact:
#    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to "storybook-pages" branch 🛎️
        uses: actions/checkout@v4
        with:
          ref: storybook-pages

#      - name: Remove builds older than 1 days 🗑️
#        run: |
#          #!/bin/bash
#            IGNORED_FOLDERS=("main" ".git")
#            X_DAYS_AGO_TIMESTAMP=$(date -d "$1 days ago" --utc +%s)
#
#            for dir in $(find . -maxdepth 1 -type d); do
#              if [[ " ${IGNORED_FOLDERS[@]} " =~ " ${dir} " ]]; then
#                continue
#              fi
#              [ -d "$dir" ] || continue
#
#              LAST_MODIFIED_TIMESTAMP=$(git log -1 --format="%at" -- $dir/* | head -n 1)
#              if [ -n "$LAST_MODIFIED_TIMESTAMP" ] && [ "$LAST_MODIFIED_TIMESTAMP" -lt "$X_DAYS_AGO_TIMESTAMP" ]; then
#                echo -e "\nRemoving $dir last modified at $(date -d "@$LAST_MODIFIED_TIMESTAMP")"
#                git rm --quiet -r "$dir"
#              fi
#              echo "Folder: $dir"
#              echo "Last modified at: $(date -d "@$LAST_MODIFIED_TIMESTAMP")"
#            done

      - name: Get current date
        run: echo 'CURRENT_DATE=$(date +%s)' >> $GITHUB_ENV
      - name: Get folder age
        run: |
          for folder in $(find . -type d -not -path '*/.git*'); do
            folder_age=$(stat -c %Y "$folder")
            if [ "$folder_age" -lt "$((CURRENT_DATE - 14 * 86400))" ]; then
              echo "Deleting folder: $folder"
            fi
          done
#      - name: Create Index File 📄
#        run: |
#          #!/bin/bash
#          echo "<html><body><h2>Storybook builds:</h2><ul>" > index.html
#          for dir in */; do
#            echo "<li><a href=\"$dir\">$dir</a></li>" >> index.html
#          done
#          echo "</ul><p>Generated at: $(date)</p></body></html>" >> index.html
#          echo "Index file successfully updated!"
#        shell: bash
#
#      - name: Commit and Push 🪄
#        run: |
#          git config user.email "actions@github.com"
#          git config user.name "GitHub Actions"
#          git add .
#          git commit -m "Update index.html & remove old builds"
#          git push origin storybook-pages
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Upload artifact 📤
#        uses: actions/upload-pages-artifact@v3
#        with:
#          name: github-pages
#          path: ./

#  deploy:
#    needs: create_artifact
#    permissions:
#      pages: write
#      id-token: write
#    environment:
#      name: github-pages
#      url: ${{ steps.deployment.outputs.page_url }}
#    runs-on: ubuntu-latest
#    steps:
#      - name: Deploy to GitHub Pages 🚀
#        id: deployment
#        uses: actions/deploy-pages@v4
#        with:
#          artifact_name: github-pages
